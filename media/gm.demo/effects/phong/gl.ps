#if GL_ES
precision mediump int;
precision mediump float;
precision mediump sampler2DShadow;
#endif

in vec4 _position;
in vec4 _normal;
out vec4 _fragColor;

uniform mat4 GM_ViewMatrix;
uniform mat4 GM_WorldMatrix;

uniform vec3 lightColor;

vec3 lightDirection_N = normalize(vec3(2, 1, 1));
vec3 ambient() { return lightColor; }
vec3 diffuse()
{
   vec3 eyeDirection_world = (GM_WorldMatrix * _position).xyz;
   vec3 eyeDirection_world_N = normalize(eyeDirection_world);
   vec3 lightPosition_world = (vec4(lightDirection_N, 1)).xyz;
   vec3 lightDirection_world_N = normalize(lightPosition_world + eyeDirection_world);
   return max(dot(lightDirection_world_N, _normal.xyz) * lightColor, 0.f);
}

void main()
{
   _fragColor = vec4(ambient() + diffuse(), 1);
}
