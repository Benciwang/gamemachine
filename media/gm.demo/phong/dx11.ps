static float3 lightDirection_N = normalize(float3(2, 1, 1));
float3 lightColor = float3(.7, 0, 0);
float3 ambient()
{
	return lightColor;
}

float3 diffuse(PS_INPUT input)
{
	float3 eyeDirection_world_N = normalize((input.WorldPos).xyz);
	float3 lightDirection_world_N = normalize(float4(lightDirection_N.x, lightDirection_N.y, lightDirection_N.z, 1).xyz); 
	return max(dot(lightDirection_world_N, input.Normal) * lightColor, 0);
}

float4 PS(PS_INPUT input) : SV_TARGET
{
	float3 result = ambient() + diffuse(input);
	return float4(result.x, result.y, result.z, 1);
}